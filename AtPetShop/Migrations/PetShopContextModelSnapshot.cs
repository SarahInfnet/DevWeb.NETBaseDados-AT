// <auto-generated />
using System;
using AtPetShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtPetShop.Migrations
{
    [DbContext(typeof(PetShopContext))]
    partial class PetShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AtPetShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShelfLocationId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ShelfLocationId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Roupa",
                            Created = new DateTime(2023, 12, 15, 16, 21, 0, 750, DateTimeKind.Local).AddTicks(8689),
                            Description = "Vestido rosa para gatos filhotes, tecido sem estampa",
                            ImageFile = "pinkDress.jpg",
                            Name = "Vestido para gato",
                            Price = 45m,
                            ShelfLocationId = 1,
                            ShortDescription = "Vestido rosa"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Farmácia",
                            Created = new DateTime(2023, 12, 15, 16, 21, 0, 750, DateTimeKind.Local).AddTicks(8692),
                            Description = "Indicado para cães de 5,1 a 10 kg. Proteção contra pulgas, carrapatos, sarnas. Comprimido mastigável",
                            ImageFile = "antipulgas.jpg",
                            Name = "Antipulgas",
                            Price = 95.69m,
                            ShelfLocationId = 2,
                            ShortDescription = "Antipulgas Simparic 20 mg para cães 5,1 a 10 kg - Zoetis"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Acessórios de Alimentação",
                            Created = new DateTime(2023, 12, 15, 16, 21, 0, 750, DateTimeKind.Local).AddTicks(8693),
                            Description = "Recipiente amplo e limpo. Disponível nos tamanhos 2, 3 e 4.",
                            ImageFile = "comedouro.jpg",
                            Name = "Comedouro",
                            Price = 59.99m,
                            ShelfLocationId = 3,
                            ShortDescription = "Comedouro Chalesco Duplo Inox para Cães"
                        });
                });

            modelBuilder.Entity("AtPetShop.Models.ShelfLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Aisle")
                        .HasColumnType("int");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShelfLocation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aisle = 6,
                            Column = 3,
                            Created = new DateTime(2023, 12, 15, 16, 21, 0, 750, DateTimeKind.Local).AddTicks(8609),
                            Row = 4
                        },
                        new
                        {
                            Id = 2,
                            Aisle = 7,
                            Column = 1,
                            Created = new DateTime(2023, 12, 15, 16, 21, 0, 750, DateTimeKind.Local).AddTicks(8618),
                            Row = 5
                        },
                        new
                        {
                            Id = 3,
                            Aisle = 9,
                            Column = 6,
                            Created = new DateTime(2023, 12, 15, 16, 21, 0, 750, DateTimeKind.Local).AddTicks(8618),
                            Row = 12
                        });
                });

            modelBuilder.Entity("AtPetShop.Models.Product", b =>
                {
                    b.HasOne("AtPetShop.Models.ShelfLocation", "ShelfLocation")
                        .WithMany("Products")
                        .HasForeignKey("ShelfLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelfLocation");
                });

            modelBuilder.Entity("AtPetShop.Models.ShelfLocation", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
